// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PUBLIC_URL")
}

enum Role {
  ADMIN
  STAFF
  USER
}

enum TransmissionType {
  AUTOMATIC
  MANUAL
}

enum DriveType {
  FWD
  RWD
  AWD
}

model User {
  id            String       @id @default(cuid())
  email         String       @unique
  password      String
  name          String?
  role          Role         @default(USER)
  reservations  Reservation[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Car {
  id              String          @id @default(cuid())
  make            String
  model           String
  year            Int
  color           String
  transmission    TransmissionType
  driveType       DriveType
  fuelEfficiency  Int             @map("fuel_efficiency")
  pricePerDay     Decimal         @map("price_per_day")
  imageUrl        String?         @map("image_url")
  isAvailable     Boolean         @default(true)
  reservations    Reservation[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model Reservation {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  carId         String
  car           Car       @relation(fields: [carId], references: [id])
  startDate     DateTime
  endDate       DateTime
  totalPrice    Decimal
  status        ReservationStatus @default(PENDING)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}